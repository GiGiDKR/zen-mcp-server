"""
Test d'int√©gration serveur simple pour diagnostiquer les probl√®mes.
"""

import sys
from pathlib import Path

# Ajouter le r√©pertoire parent pour les imports
sys.path.insert(0, str(Path(__file__).parent.parent))


def test_server_step_by_step():
    """Test √©tape par √©tape pour identifier les probl√®mes d'import"""
    print("=== DIAGNOSTIC √âTAPE PAR √âTAPE ===\n")

    # √âtape 1: Test tools basic
    try:
        print("1. Import tools...")
        print("‚úÖ Import tools OK")
    except Exception as e:
        print(f"‚ùå Import tools failed: {e}")
        import traceback

        traceback.print_exc()
        return False

    # √âtape 2: Test tools sp√©cifiques
    try:
        print("2. Import tools sp√©cifiques...")
        from tools import AnalyzeTool, ChatTool

        print("‚úÖ Import tools sp√©cifiques OK")
    except Exception as e:
        print(f"‚ùå Import tools sp√©cifiques failed: {e}")
        import traceback

        traceback.print_exc()
        return False

    # √âtape 3: Test personas
    try:
        print("3. Import personas...")
        from personas.tools import PersonasListTool

        print("‚úÖ Import personas OK")
    except Exception as e:
        print(f"‚ùå Import personas failed: {e}")
        import traceback

        traceback.print_exc()
        return False

    # √âtape 4: Test imports server individuels
    try:
        print("4. Test imports un par un...")

        print("  - Config...")
        print("  ‚úÖ Config OK")

        print("  - Providers...")
        print("  ‚úÖ Providers OK")

        print("  - Tools...")
        from tools import ChatTool

        print("  ‚úÖ Tools OK")

        print("  - Personas tools...")
        from personas.tools import PersonasListTool

        print("  ‚úÖ Personas tools OK")

    except Exception as e:
        print(f"‚ùå Import individuel failed: {e}")
        import traceback

        traceback.print_exc()
        return False

    # √âtape 5: Test TOOLS dictionary directement
    try:
        print("5. Test construction TOOLS...")

        # Construire manuellement comme dans le serveur
        from tools import (
            AnalyzeTool,
            ChatTool,
        )

        print("  ‚úÖ Import tools principaux OK")

        from personas.tools import (
            PersonasCreateTool,
            PersonasListTool,
        )

        print("  ‚úÖ Import personas tools OK")

        # Construire le dictionnaire
        TOOLS = {
            "chat": ChatTool(),
            "analyze": AnalyzeTool(),
            "personas_list": PersonasListTool(),
            "personas_create": PersonasCreateTool(),
        }
        print(f"  ‚úÖ Construction TOOLS OK - {len(TOOLS)} outils")

    except Exception as e:
        print(f"‚ùå Construction TOOLS failed: {e}")
        import traceback

        traceback.print_exc()
        return False

    # √âtape 6: Import complet du serveur
    try:
        print("6. Import serveur complet...")
        import server

        print("‚úÖ Import serveur OK")

        tools_count = len(server.TOOLS)
        print(f"‚úÖ TOOLS dictionary loaded with {tools_count} tools")

        # V√©rifier nos personas tools
        personas_tools = [name for name in server.TOOLS.keys() if "personas" in name]
        print(f"‚úÖ Personas tools found: {personas_tools}")

    except Exception as e:
        print(f"‚ùå Import serveur failed: {e}")
        import traceback

        traceback.print_exc()
        return False

    print("\nüéâ TOUS LES TESTS R√âUSSIS!")
    return True


if __name__ == "__main__":
    success = test_server_step_by_step()
    print(f"\nR√©sultat: {'‚úÖ SUCCESS' if success else '‚ùå FAILED'}")
    exit(0 if success else 1)
